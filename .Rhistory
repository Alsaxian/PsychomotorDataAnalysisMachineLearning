}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(centre1, centre2)
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
data$classe2 <- data$classe1
centres <- calculesCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
return(list(classes = data$classe1, n.Iter = i))
}
resulCl <- CluEM(data = sujets[, 7:32])
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(centre1, centre2)
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
data$classe2 <- data$classe1
centres <- calculesCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
return(list(classes = data$classe1, n.Iter = i))
}
resulCl <- CluEM(data = sujets[, 7:32])
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(centre1, centre2)
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
return(list(classes = data$classe1, n.Iter = i))
}
resulCl <- CluEM(data = sujets[, 7:32])
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(c(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
return(list(classes = data$classe1, n.Iter = i))
}
resulCl <- CluEM(data = sujets[, 7:32])
resulCl$classes
resulCl$n.Iter
resulCl <- cluEM(data = sujets[, 7:32], centresDonnes = FALSE)
resulCl <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
resulCl
sum(resulCl$classes == 1)
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
resulCl2
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(c(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(centre1)
print(centre2)
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(c(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
resulCl2$n.Iter
resulCl2$classes
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(c(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[1]
centre2 <- centres[2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
apply(sujets, 2, sum)
apply(sujets[, 7:32], 2, sum)
cbind(c(1,2), c(3,4))
rbind(c(1,2), c(3,4))
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(cbind(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
sm(TRUE, TRUE) == 2
sum(TRUE, TRUE) == 2
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(cbind(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
data$classe1 <- regrouper()
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(cbind(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
data$classe1 <- regrouper()
print(dara$classe1)
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, sum) / sum(data$classe1 == 1)
centre2 <- apply(data[data$classe1 == 2, ], 2, sum) / sum(data$classe1 == 2)
return(cbind(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
data$classe1 <- regrouper()
print(data$classe1)
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
warnings()
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
data$classe1 <- regrouper()
print(data$classe1)
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, mean)
centre2 <- apply(data[data$classe1 == 2, ], 2, mean)
return(cbind(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
data$classe1 <- regrouper()
print(data$classe1)
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
?apply
apply(matric(1:4, byrow = TRUE), 2, summ)
apply(matric(1:4, byrow = TRUE), 2, sum)
apply(matrix(1:4, byrow = TRUE), 2, sum)
apply(matrix(1:4, nrow = 2), 2, sum)
appLY <- apply(matrix(1:4, nrow = 2), 2, sum)
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
centre1[centre1 == 1] <- 0.9
centre1[centre1 == 0] <- 0.1
centre2[centre2 == 1] <- 0.9
centre2[centre2 == 0] <- 0.1
data$classe1 <- regrouper()
print(data$classe1)
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
CluEM <- function (data, centresDonnes = TRUE, centre1 = rep(0.9, times = ncol(data)),
centre2 = rep(0.1, times = ncol(data)), Iter = 100) {
if (!centresDonnes) {
centre1 <- runif(ncol(data)) ## proba de réussite d'un test
centre2 <- runif(ncol(data)) ## proba de réussite d'un test
}
regrouper <- function () {
apply(data, 1, function(obs) {
dis1 <- sum(obs * log(centre1) + (1 - obs) * log(1 - centre1))
dis2 <- sum(obs * log(centre2) + (1 - obs) * log(1 - centre2))
return (ifelse(dis1 < dis2, 1, 2))
})
}
calculeCentres <- function() {
centre1 <- apply(data[data$classe1 == 1, ], 2, mean)
centre2 <- apply(data[data$classe1 == 2, ], 2, mean)
return(cbind(centre1, centre2))
}
data$classe1 <- regrouper()
data$classe2 <- 2
for(i in 1:Iter) {
if (all((data$classe1 == data$classe2)) || sum(data$classe1 == 1) == 0 || sum(data$classe1 == 2) == 0) break else {
print(paste("i = ", i))
data$classe2 <- data$classe1
centres <- calculeCentres()
centre1 <- centres[, 1]
centre2 <- centres[, 2]
print(paste("centre1 =", centre1))
print(paste("centre2 =", centre2))
centre1[centre1 == 1] <- 0.9
centre1[centre1 == 0] <- 0.1
centre2[centre2 == 1] <- 0.9
centre2[centre2 == 0] <- 0.1
data$classe1 <- regrouper()
print(data$classe1)
if (sum(data$classe1 == 1) == 1) data$classe1 <- 2 else if (sum(data$classe1 == 2) == 1) data$classe1 <- 1
}
}
print(i)
return(list(classes = data$classe1, n.Iter = i))
}
resulCl2 <- CluEM(data = sujets[, 7:32], centresDonnes = FALSE)
